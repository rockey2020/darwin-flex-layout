@import "../components/generateAlignment";
@import "../components/generatePosition";
@import "../components/loopItemWidth";
@import "../components/loopOffsetSpace";
@import "../components/loopPullAndPushSize";
@import "./reset-css";

.da-flex {
  width: 100%;
  display: flex;
  align-items: center;
  align-content: center;
  flex-wrap: nowrap;

  //对齐方式布局
  .generateAlignment(justify-start, justify, flex-start);
  .generateAlignment(justify-center, justify, center);
  .generateAlignment(justify-end, justify, flex-end);

  .generateAlignment(align-start, align, flex-start);
  .generateAlignment(align-center, align, center);
  .generateAlignment(align-end, align, flex-end);

  .generateAlignment(justify-space-between, justify, space-between);
  .generateAlignment(justify-space-around, justify, space-around);
  .generateAlignment(justify-space-evenly, justify, space-evenly);
  .generateAlignment(justify-stretch, justify, stretch);

  .generateAlignment(align-space-between, align, space-between);
  .generateAlignment(align-space-around, align, space-around);
  .generateAlignment(align-space-evenly, align, space-evenly);
  .generateAlignment(align-stretch, align, stretch);

  //基础布局
  .inline, &.inline {
    display: inline-flex;
    width: auto;
  }

  .column, &.column {
    flex-flow: column;
  }

  .wrap, &.wrap {
    flex-wrap: wrap;
  }

  //宽度生成
  .loopItemWidth();

  //左侧的间隔格数 margin-left
  .loopOffsetSpace();

  //统一定位属性
  &[class*=pull-], &&[class*=pull-], &[class*=push-], &&[class*=push-] {
    position: relative;
  }

  //向左向右相对移动 left right
  .loopPullAndPushSize();

  //定位布局
  .generatePosition(static);
  .generatePosition(relative);
  .generatePosition(absolute);
  .generatePosition(fixed);
}

